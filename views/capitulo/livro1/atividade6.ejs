<div id="primeiroEX">
    <div class="row">
        <div class="col-sm-7 p-0">
            <canvas id="board" style="max-width: 100%; max-height: 100%;">
            </canvas> 
        </div>
        <div class="col-sm-5 p-0">
            <p class="texto p-2 mt-4em">
            Pinte todas as casas das linhas pares no tabuleiro.
            </p> 
            <div class="center p-2">
                <input type="color" id="color" name="color" value="#000000" class="color-picker">                    
                <label for="color" class="text-center texto-cursivo-pequeno d-inline centered m-0">Escolha a cor do pincel aqui!</label>
            </div>
            <div class="text-center mt-1 mb-4em">
                <button id="eraser" class="btn btn-danger mt-0"><i class="fas fa-undo-alt"></i></button>
            </div>
        </div>
    </div>               
</div>             

<style>
    .img-pecas{
        max-width: 5em;
        display: block;
        margin-right: auto;
        margin-left: auto;
    }

    #board{
        background-image: url('../../../../public/img/tabuleiro.jpg');
        background-repeat: no-repeat;
        background-size: contain;
        background-position-x: center;
        display: inline;
        cursor: url("../../../../public/img/pen-cursor.svg") 16 16, pointer;
    }

    .centered{
        align-self: center;
    }

    .mt-4em{
        margin-top: 4em;
    }

    .mb-4em{
        margin-bottom: 4em;
    }


    canvas{
        height: 100%;
    }

    .center{
        align-self: center;
        display: flex;
    }

    .color-picker{
        appearance: none;
        -moz-appearance: none;
        -webkit-appearance: none;
        background: none;
        border: 0;
        cursor: pointer;
        height: 2.5em;
        padding: 0;
        width: 2.5em;
        margin-right: 0.25em;
    }

    .texto-cursivo-pequeno{
        font-size: 0.6em;
        font-family: 'Yomogi', cursive;
    }

    .texto{
        font-size: 1em;
        font-family: 'Yomogi', cursive;
    }

    #eraser{
        display: inline;
        margin-right: 0.5em;
    }

    .image{
        background-image: url('.../img/tabuleiroex2.jpg');
        background-repeat: no-repeat;
        background-size: contain;
        background-position-x: center;
        min-height: 100vh;
    }

    .img-icone{
        width: -webkit-fill-available;
    }

    .ex2{
        font-size: 2rem;
    }

</style>
<script>
    document.addEventListener('DOMContentLoaded', () => {

    const pincel = {
        ativo: false,
        movendo: false,
        pos:{x:0, y:0},
        posAnterior: null
    }
    const board = document.querySelector("#board");
    const color = document.querySelector("#color");

    const context = board.getContext('2d');

    function getHeight(){
        return document.querySelector("#board").clientHeight
    }

    function getWidth(){
        return document.querySelector("#board").clientWidth
    }

    board.width = getWidth()
    board.height = getHeight()

    context.lineWidth = 3;
    color.addEventListener('change', ()=>{
        context.globalCompositeOperation = 'source-over';
        context.strokeStyle = color.value;
        board.style.cursor = `url("../../../../public/img/pen-cursor.svg") 16 16, pointer`;
    })
    
    const eraser = document.querySelector("#eraser");
    eraser.addEventListener('click', () => {
        context.globalCompositeOperation = 'source-out';
        context.strokeStyle = 'rgba(1,0,0,0)';
        board.style.cursor = `url("../../../../public/img/undo-cursor.svg") 16 16, pointer`;
    })
    
    const desenharLinha = (linha) => {
        context.beginPath();
        context.moveTo(linha.posAnterior.x, linha.posAnterior.y);
        context.lineTo(linha.pos.x, linha.pos.y);
        context.stroke();
    }

    board.onmousedown = (evento) => {pincel.ativo = true};
    window.onmouseup = (evento) => {pincel.ativo = false};
    board.onmousemove = (evento) => {
        var rect = board.getBoundingClientRect();
        pincel.pos.x = evento.clientX - rect.left;
        pincel.pos.y = evento.clientY - rect.top;
        pincel.movendo = true;
    }


    const ciclo = () => {
        if(pincel.ativo && pincel.movendo && pincel.posAnterior){
            desenharLinha({pos: pincel.pos, posAnterior: pincel.posAnterior})
            pincel.movendo = false;  
        }
        pincel.posAnterior = {x: pincel.pos.x, y:pincel.pos.y}
        setTimeout(ciclo, 40);
    }

    ciclo();

    //---------- PRÓXIMO EXERCÍCIO ---------//

})

$(() => { 
    $('#proximo').attr('disabled', false)
    $("#proximo").on("click", function(){
    if (JsonWebApi.active)
        return;

    let aprovado = 1, nota = 10;
    let idturma = <%-lista.id%>;
    let idatividade = <%-atividade%>;

    Swal.wait();

    JsonWebApi.post("<%- root %>/api/atividade/registrarTentativa", {
        idturma,
        idatividade,
        nota,
        aprovado
    }, function (response) {
        if (response.success) {
            Swal.success("Atividade concluída com sucesso! " + emoji.happy);
        } else {
            Swal.error(response.value + " " + emoji.sad);
        }
    });
})})
</script>